<Application x:Class="OPMS.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:OPMS"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converters="clr-namespace:OPMS.Converters"
             xmlns:properties="clr-namespace:OPMS.Properties"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <converters:EditToolbarModeToBool x:Key="EditToolbarModeToBoolConverter" />
            <converters:InverseBoolConverter x:Key="InverseBoolConverter" />

            <Brush x:Key="PrimaryColor">#824E36</Brush>
            <Brush x:Key="PrimaryColorDark">#413428</Brush>
            <Brush x:Key="SecondaryColor">#BFA983</Brush>
            <Brush x:Key="PageBackground">#F7F7F7</Brush>
            <Brush x:Key="FontColorBlack">Black</Brush>
            <Brush x:Key="PrimaryColorOpa44">#70BFA983</Brush>

            <Style TargetType="{x:Type Menu}">
                <Setter Property="Background"
                        Value="{StaticResource PrimaryColor}" />
                <Setter Property="Foreground"
                        Value="White" />
            </Style>

            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="Foreground"
                        Value="Black" />
                <Setter Property="FontSize"
                        Value="14" />
            </Style>

            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Padding"
                        Value="0,5,0,5" />
                <Setter Property="MaxHeight"
                        Value="30" />
                <Style.Triggers>
                    <Trigger Property="Validation.HasError"
                             Value="true">
                        <Setter Property="ToolTip"
                                Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                        Path=(Validation.Errors)/ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="ComboBox">
                <Setter Property="Padding"
                        Value="5,5,0,5" />

            </Style>

            <Style TargetType="{x:Type Label}">
                <Setter Property="Foreground"
                        Value="Black" />
                <Setter Property="Padding"
                        Value="0" />
            </Style>

            <Style TargetType="DatePicker">
                <Setter Property="Padding"
                        Value="0,5,0,5" />
            </Style>

            <Style  TargetType="{x:Type ListBoxItem}">

                <Style.Triggers>
                    <Trigger Property="ItemsControl.AlternationIndex"
                             Value="1">
                        <Setter Property="Background"
                                Value="{StaticResource PrimaryColorOpa44}"></Setter>
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Focusable"
                        Value="True" />

            </Style>

            <Style TargetType="RadioButton">
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="FontSize"
                        Value="14" />
            </Style>

            <Style TargetType="CheckBox">
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="FontSize"
                        Value="14" />
            </Style>

            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Background"
                        Value="{StaticResource SecondaryColor}" />
                <Setter Property="Height"
                        Value="35" />
                <Setter Property="Foreground"
                        Value="Black" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="MinWidth"
                        Value="100" />
                <Setter Property="SeparatorBrush"
                        Value="Black" />
                <Setter Property="SeparatorVisibility"
                        Value="Visible" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="BorderBrush"
                        Value="Black" />
                <Setter Property="Padding"
                        Value="5,0,5,0" />
                <Setter Property="FontWeight"
                        Value="SemiBold" />
            </Style>

            <Style x:Key="CustomDataGrid"
                   TargetType="DataGrid">
                <Setter Property="AlternationCount"
                        Value="2" />
                <Setter Property="AlternatingRowBackground"
                        Value="#70BFA983" />
                <Setter Property="HeadersVisibility"
                        Value="Column" />
                <Setter Property="CanUserAddRows"
                        Value="False" />
                <Setter Property="CanUserDeleteRows"
                        Value="False" />
                <Setter Property="CanUserReorderColumns"
                        Value="False" />
                <Setter Property="GridLinesVisibility"
                        Value="Vertical" />
                <Setter Property="HorizontalScrollBarVisibility"
                        Value="Auto" />
                <Setter Property="VerticalScrollBarVisibility"
                        Value="Auto" />
                <Setter Property="Background"
                        Value="{StaticResource PrimaryColorOpa44}" />
            </Style>

            <Style TargetType="DataGridCell">
                <Setter Property="Padding"
                        Value="5,0,5,0" />
                <Setter Property="MaxHeight"
                        Value="20" />
            </Style>


            <Style TargetType="TabControl">
                <Setter Property="Margin"
                        Value="10,0,10,10" />
            </Style>

            <Style x:Key="BrownButton"
                   TargetType="Button">
                <Setter Property="MaxWidth"
                        Value="250" />
                <Setter Property="Background"
                        Value="{StaticResource PrimaryColorDark}" />
                <Setter Property="Foreground"
                        Value="White" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled"
                             Value="True">
                        <Setter Property="Background"
                                Value="{StaticResource PrimaryColorDark}" />
                        <Setter Property="Foreground"
                                Value="White" />
                    </Trigger>
                    <Trigger Property="IsEnabled"
                             Value="False">
                        <Setter Property="Foreground"
                                Value="DarkGray" />
                        <Setter Property="Background"
                                Value="LightGray" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TabItem">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Border Name="Border"
                                    BorderThickness="1,1,1,0"
                                    BorderBrush="Black">
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin="10,2" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected"
                                         Value="True">
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="#413428" />
                                    <Setter Property="Foreground"
                                            Value="White" />
                                </Trigger>
                                <Trigger Property="IsSelected"
                                         Value="False">
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="#70BFA983" />
                                    <Setter Property="Foreground"
                                            Value="Black" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LabelStackPanel"
                   TargetType="StackPanel">
                <Setter Property="HorizontalAlignment"
                        Value="Right" />
                <Setter Property="VerticalAlignment"
                        Value="Center" />
                <Setter Property="Margin"
                        Value="0,0,5,0" />
                <Setter Property="Orientation"
                        Value="Horizontal" />
            </Style>

            <Style TargetType="{x:Type TreeViewItem}">
                <Style.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                     Color="#70BFA983" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                     Color="#70BFA983" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                     Color="Black" />
                </Style.Resources>
                <Setter Property="IsExpanded"
                        Value="{Binding IsExpanded, Mode=TwoWay}" />
                <Setter Property="IsSelected"
                        Value="{Binding IsSelected, Mode=TwoWay}" />
                <Setter Property="FontWeight"
                        Value="Normal" />
                <Style.Triggers>
                    <Trigger Property="IsSelected"
                             Value="True">
                        <Setter Property="FontWeight"
                                Value="Bold" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MaterialDesignOutlinedButton"
                   BasedOn="{StaticResource MaterialDesignOutlinedButton}"
                   TargetType="{x:Type Button}">
                <Setter Property="materialDesign:ButtonAssist.CornerRadius"
                        Value="0" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="BorderBrush"
                        Value="Black" />
                <Setter Property="Padding"
                        Value="5,0,5,0" />
            </Style>

            <Style TargetType="Page">
                <Setter Property="Background"
                        Value="{StaticResource PageBackground}" />
            </Style>

            <ResourceDictionary.MergedDictionaries>
                <materialDesign:CustomColorTheme BaseTheme="Light"
                                                 PrimaryColor="#824E36"
                                                 SecondaryColor="#BFA983" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Menu.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PasswordBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ComboBox.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DatePicker.xaml" />
            </ResourceDictionary.MergedDictionaries>




        </ResourceDictionary>
    </Application.Resources>
</Application>
